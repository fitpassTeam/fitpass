# Test Database Configuration
spring.datasource.url=jdbc:h2:mem:testdb;MODE=MySQL;DATABASE_TO_LOWER=TRUE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=

spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.H2Dialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true

# JWT Configuration
jwt.secret=test-secret-key-for-testing-purpose-minimum-32-characters

# AWS S3 Mock Configuration (???? ?? ?)
cloud.aws.credentials.access-key=test-access-key
cloud.aws.credentials.secret-key=test-secret-key
cloud.aws.s3.bucket=test-bucket
cloud.aws.region.static=ap-northeast-2
cloud.aws.stack.auto=false

# OAuth2 Mock Configuration (???? ?? ?)
spring.security.oauth2.client.registration.google.client-id=test-google-client-id
spring.security.oauth2.client.registration.google.client-secret=test-google-client-secret
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.scope=profile,email
spring.security.oauth2.client.registration.google.client-name=Google

spring.security.oauth2.client.registration.naver.client-id=test-naver-client-id
spring.security.oauth2.client.registration.naver.client-secret=test-naver-client-secret
spring.security.oauth2.client.registration.naver.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.scope=name,email,profile_image
spring.security.oauth2.client.registration.naver.client-name=Naver

spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# Toss Payments Mock Configuration (???? ?? ?)
toss.payments.test-client-key=test-toss-client-key
toss.payments.test-secret-key=test-toss-secret-key
toss.payments.success-url=http://localhost:8080/success
toss.payments.fail-url=http://localhost:8080/fail

# Cache Configuration - Redis ????
spring.cache.type=none

# Logging Configuration
logging.level.org.springframework.web=DEBUG
logging.level.org.example.fitpass=DEBUG

# Actuator Configuration
management.endpoints.web.exposure.include=health,info
management.prometheus.metrics.export.enabled=false
